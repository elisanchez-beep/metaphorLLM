{
    "datasets": {
        "figurative-nli": {
            "data_path": "/gaueko0/users/esanchez/metaphor_LLMs/data/corpora/interpretation/Figurative-NLI-main/data/metaphor-entail.json",
            "data_path_paraphrase": "/gaueko0/users/esanchez/metaphor_LLMs/paraphrase_gen/outputs/figurative-nli/mistralinstruct/instruct_15-10-2024_12_08_20.tsv",
            "prem_col": "premise",
            "hyp_col": "hypothesis",
            "label_col": "label",
            "prompts": ["binary", "paraphrase_gen"]
        },
        "flute": {
            "data_path": "/gaueko0/users/esanchez/metaphor_LLMs/data/corpora/interpretation/flute/testgolddata/metaphor_test_binary_labels.tsv",
            "data_path_paraphrase": "/gaueko0/users/esanchez/metaphor_LLMs/paraphrase_gen/outputs/flute/mistralinstruct/instruct_15-10-2024_12_03_11.tsv",
            "prem_col": "premise",
            "hyp_col": "hypothesis",
            "label_col": "label",
            "prompts": ["binary", "paraphrase_gen"]
        },
        "impli": {
            "data_path": "/gaueko0/users/esanchez/metaphor_LLMs/data/corpora/interpretation/impli/metaphors/manual_all.tsv",
            "data_path_paraphrase": "/gaueko0/users/esanchez/metaphor_LLMs/paraphrase_gen/outputs/impli/commandr/15-11-2024_11_10_23.tsv",
            "prem_col": "premise",
            "hyp_col": "hypothesis",
            "label_col": "label",
            "prompts": ["binary", "paraphrase_gen"]
        },
        "fig-qa": {
            "data_path": "/gaueko0/users/esanchez/metaphor_LLMs/data/corpora/interpretation/Fig-QA-master/data/filtered/dev_binary_labels.tsv",
            "data_path_paraphrase": "/gaueko0/users/esanchez/metaphor_LLMs/paraphrase_gen/outputs/fig-qa/mistralinstruct/instruct_15-10-2024_12_24_05.tsv",
            "prem_col": "premise",
            "hyp_col": "hypothesis",
            "label_col": "label",
            "prompts": ["binary", "paraphrase_gen"]
        },
        "meta4xnli": {
            "data_path": "/gaueko0/users/esanchez/metaphor_LLMs/data/corpora/interpretation/meta4xnli/test_all_binary_labels_met_location.tsv",
            "data_path_paraphrase": "/gaueko0/users/esanchez/metaphor_LLMs/paraphrase_gen/outputs/meta4xnli/mistralinstruct/instruct_15-10-2024_11_14_41.tsv",
            "prem_col": "sentence1",
            "hyp_col": "sentence2",
            "label_col": "gold_label",
            "prompts": ["binary", "trilabel", "paraphrase_gen"]
        }
    },
    "models": {
        "llama2": "/gaueko1/hizkuntza-ereduak/LLaMA-2/huggingface/first-release/Llama-2-7b-hf",
        "llama2chat": "meta-llama/Llama-2-7b-chat-hf",
        "llama3": "meta-llama/Meta-Llama-3-8B",
        "llama3instruct": "meta-llama/Meta-Llama-3-8B-Instruct",
        "mixtral8": "mistralai/Mixtral-8x7B-v0.1",
        "mistral7": "mistralai/Mistral-7B-v0.1",
        "mixtralinstruct": "mistralai/Mixtral-8x7B-Instruct-v0.1",
        "mistralinstruct": "mistralai/Mistral-7B-Instruct-v0.2",
        "commandr": "command-r-plus-08-2024"
    },
    "prompts": {
        "binary": {
            "nli-zero": {
                "preffix": "Say which is the inference relationship between these two sentences. Please, answer between 'entailment' or 'other'.",
                "label_mapping": {
                    "entailment": "entailment",
                    "other": "not_entailment"
                }
            },
            "nli-few": {
                "preffix": "Say which is the inference relationship between these two sentences. Please, answer between 'entailment' or 'other'. Here you have some examples: I am open -> I am friendly: entailment. My heart is broken -> I am happy: other.",
                "label_mapping": {
                    "entailment": "entailment",
                    "other": "not_entailment"
                }
            },
            "qa-zero-ent": {
                "preffix": "Are these two sentences entailed? Please, answer between 'yes' or 'no'",
                "label_mapping": {
                    "yes": "entailment",
                    "no": "not_entailment"
                }
            },
            "qa-few-ent": {
                "preffix": "Are these two sentences entailed? Please, answer between 'yes' or 'no'. Here you have some examples: I am open -> I am friendly: yes. My heart is broken -> I am happy: no.",
                "label_mapping": {
                    "yes": "entailment",
                    "no": "not_entailment"
                }
            },
            "chain": {
                "preffix": "You are an expert linguist and your task is to annotate sentences for the task of Natural Language Inference. This task consists in determining if a first sentence (premise) entails or not the second sentence (hypothesis). Please, limit your answer to 'yes' or 'no'. \n Here you have a few examples: \n Premise: I am an open person. \n Hypothesis: I am friendly. \n Answer: yes \n Premise: My heart is broken. \n Hypothesis: I am happy. \n Answer: no.",
                "label_mapping": {
                    "yes": "entailment",
                    "no": "not_entailment"
                }
            }
        },
        "paraphrase_gen": {
            "instruct": {
                "preffix": "Please, generate a literal paraphrase of this sentence. The sentence contains a metaphorical expression. Your task is to rewrite the sentence so it does not contain any metaphors. The generated sentence must have the same meaning as the original. Please, DO NOT include metaphorical or idiomatic expressions in the generated sentence. Answer only with the literal sentence. "
            }
        }
    }
}